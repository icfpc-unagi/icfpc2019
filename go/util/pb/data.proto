syntax = "proto3";

// TODO(imos): Enable the followings accessible.
// import "google/protobuf/descriptor.proto";
// import "google/protobuf/duration.proto";
// import "google/protobuf/timestamp.proto";

package pb;

message Api {
  // API Request defition.
  //
  // NEXT ID TO USE: 2
  message Request {
    message Context {}
    Context context = 1;

    // 問題の追加を行います
    message InsertProblem {
      string problem_name = 1;
      bytes problem_data = 2;
    }
    InsertProblem insert_problem = 2;

    // AIプログラムの追加を行います
    message InsertProgram {
      string program_name = 1;
      string program_code = 2;
    }
    InsertProgram insert_program = 3;

    // ジャッジプログラムが実行対象をこのメソッドで確保します
    message AcquireSolution {}
    AcquireSolution acquire_solution = 4;

    // リジャッジを行います
    message InsertSolution {
      enum Strategy {
        // 既存のフィールドはリジャッジしません
        IGNORE = 0;
        // 既存のものもリジャッジします
        REPLACE = 1;
      }
      Strategy strategy = 1;
      int64 program_id = 2;
      int64 problem_id = 3;
    }
    InsertSolution insert_solution = 6;

    // スコアの更新を行います
    message UpdateSolution {
      int64 solution_id = 1;
      int64 solution_score = 2;
      bytes solution_data_blob = 3;
      bytes solution_data_error = 4;
    }
    UpdateSolution update_solution = 5;
  }

  // API Response defition.
  //
  // NEXT ID TO USE: 2
  message Response {
    message Context {
      repeated string error_messages = 1;
    }
    Context context = 1;

    message InsertProblem {
      int64 problem_id = 1;
    }
    InsertProblem insert_problem = 2;

    message InsertProgram {
      int64 program_id = 1;
    }
    InsertProgram insert_program = 3;

    message AcquireSolution {
      int64 solution_id = 1;
      int64 program_id = 2;
      string program_name = 3;
      string program_code = 4;
      int64 problem_id = 5;
      string problem_name = 6;
      bytes problem_data_blob = 7;
    }
    AcquireSolution acquire_solution = 4;

    message InsertSolution {}
    InsertSolution insert_solution = 6;

    message UpdateSolution {}
    UpdateSolution update_solution = 5;
  }
}
